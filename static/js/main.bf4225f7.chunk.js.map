{"version":3,"sources":["logo.svg","images/logo.svg","DisplayRecipe/Display.js","images/ice-cream.png","Header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Display","props","React","useState","open","setOpen","className","src","posts","image","alt","label","variant","color","onClick","Dialog","onClose","DialogContent","DialogContentText","ingredients","map","newIngredients","style","text","weight","Header","loading","setLoading","timeoutId","setTimeoutId","fetchData","setFetchData","fetchRecipeApi","searchEvent","a","axios","get","response","console","log","data","hits","burgerLogo","fontSize","marginTop","paddingLeft","type","onChange","e","timeout","setTimeout","target","value","clearTimeout","IceCream","index","recipe","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAe,I,sCCAA,G,MAAA,IAA0B,kC,2DC0G1BA,MAjGf,SAAiBC,GAAQ,IAAD,EACIC,IAAMC,UAAS,GADnB,mBACbC,EADa,KACPC,EADO,KAUpB,OACI,qBAAKC,UAAU,eAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKC,IAAKN,EAAMO,MAAMC,MAAOC,IAAI,KACjC,6BAAKT,EAAMO,MAAMG,QACjB,mBAAGC,QAAQ,WAAWC,MAAM,UAAUC,QAZ1B,WACpBT,GAAQ,IAWA,yBACA,cAACU,EAAA,EAAD,CACIX,KAAMA,EACNY,QAXI,WAChBX,GAAQ,IAQA,SAII,cAACY,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,gCACI,6BACKjB,EAAMO,MAAMW,YAAYC,KAAI,SAACC,GAC1B,OAAO,qBAAIC,MAAO,CAAET,MAAO,WAApB,2BACYQ,EAAeE,KAC9B,uBAFG,aAIQF,EAAeG,uBAQtD,+C,iBC9CD,MAA0B,sCC0D1BC,MAjDf,WAAmB,IAAD,EACgBtB,oBAAS,GADzB,mBACPuB,EADO,KACEC,EADF,OAEoBxB,qBAFpB,mBAEPyB,EAFO,KAEIC,EAFJ,OAGoB1B,mBAAS,IAH7B,mBAGP2B,EAHO,KAGIC,EAHJ,KAQRC,EAAc,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACIC,IAAMC,IAAN,0CAA6CH,EAA7C,mBAHZ,WAGY,oBAJX,qCAGO,OACbI,EADa,OAEnBC,QAAQC,IAAIF,EAASG,KAAKC,MAC1BV,EAAaM,EAASG,KAAKC,MAC3Bd,GAAW,GAJQ,2CAAH,sDAcpB,OACI,sBAAKrB,UAAU,eAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,qBAAKC,IAAKmC,EAAYhC,IAAI,KAC1B,kDAGJ,sBAAKJ,UAAU,kBAAf,UACI,cAAC,IAAD,CAAYgB,MAAO,CACfT,MAAO,UAAW8B,SAAU,OAAQC,UAAW,MAAOC,YAAa,SAEvE,uBAAOC,KAAK,OAAOC,SAnBd,SAACC,GAClB,IAAMC,EAAUC,YAAW,kBAAMlB,EAAegB,EAAEG,OAAOC,SAAQ,KACjEvB,EAAaoB,GACbI,aAAazB,YAmBT,qBAAKtB,UAAU,YAAf,SACKoB,EAAU,qBAAKpB,UAAU,kBAAkBC,IAAK+C,EAAU5C,IAAI,KAAQoB,EAAUV,KAAI,SAACZ,EAAO+C,GACzF,OAAO,cAAC,EAAD,CAAqB/C,MAAOA,EAAMgD,QAApBD,YCpC1BE,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bf4225f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/logo.381949d5.svg\";","import React from 'react'\r\nimport \"./Display.css\"\r\nimport DisplayLogo from \"../images/logo.svg\"\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nfunction Display(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n    return (\r\n        <div className=\"display_grid\" >\r\n            <div className=\"display__recipe\">\r\n                <img src={props.posts.image} alt=\"\" />\r\n                <h3>{props.posts.label}</h3>\r\n                <p variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>Ingredients</p>\r\n                <Dialog\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <DialogContent>\r\n                        <DialogContentText>\r\n                            <table>\r\n                                <tr>\r\n                                    {props.posts.ingredients.map((newIngredients) => {\r\n                                        return <tr style={{ color: \"hotpink\" }}>\r\n                                            Ingredients:  {newIngredients.text}\r\n                                            <br />\r\n\r\n                                            weight:   {newIngredients.weight}\r\n                                        </tr>\r\n                                    })}\r\n                                </tr>\r\n                            </table>\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                </Dialog>\r\n                <p>See more</p>\r\n            </div>\r\n            {/* <div className=\"display__recipe\">\r\n                <img src={DisplayLogo} alt=\"\" />\r\n                <h3>Content Name</h3>\r\n                <p>Ingredients</p>\r\n                <p>See more</p>\r\n            </div>\r\n            <div className=\"display__recipe\">\r\n                <img src={DisplayLogo} alt=\"\" />\r\n                <h3>Content Name</h3>\r\n                <p>Ingredients</p>\r\n                <p>See more</p>\r\n            </div>\r\n            <div className=\"display__recipe\">\r\n                <img src={DisplayLogo} alt=\"\" />\r\n                <h3>Content Name</h3>\r\n                <p>Ingredients</p>\r\n                <p>See more</p>\r\n            </div>\r\n            <div className=\"display__recipe\">\r\n                <img src={DisplayLogo} alt=\"\" />\r\n                <h3>Content Name</h3>\r\n                <p>Ingredients</p>\r\n                <p>See more</p>\r\n            </div>\r\n            <div className=\"display__recipe\">\r\n                <img src={DisplayLogo} alt=\"\" />\r\n                <h3>Content Name</h3>\r\n                <p>Ingredients</p>\r\n                <p>See more</p>\r\n            </div>\r\n            <div className=\"display__recipe\">\r\n                <img src={DisplayLogo} alt=\"\" />\r\n                <h3>Content Name</h3>\r\n                <p>Ingredients</p>\r\n                <p>See more</p>\r\n            </div>\r\n            <div className=\"display__recipe\">\r\n                <img src={DisplayLogo} alt=\"\" />\r\n                <h3>Content Name</h3>\r\n                <p>Ingredients</p>\r\n                <p>See more</p>\r\n            </div>\r\n            <div className=\"display__recipe\">\r\n                <img src={DisplayLogo} alt=\"\" />\r\n                <h3>Content Name</h3>\r\n                <p>Ingredients</p>\r\n                <p>See more</p>\r\n            </div>\r\n            <div className=\"display__recipe\">\r\n                <img src={DisplayLogo} alt=\"\" />\r\n                <h3>Content Name</h3>\r\n                <p>Ingredients</p>\r\n                <p>See more</p>\r\n            </div> */}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Display\r\n","export default __webpack_public_path__ + \"static/media/ice-cream.f5cb5dfd.png\";","import React, { useState } from 'react'\r\nimport \"./Header.css\"\r\nimport burgerLogo from \"../images/logo.svg\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Display from '../DisplayRecipe/Display';\r\nimport axios from 'axios';\r\nimport IceCream from \"../images/ice-cream.png\"\r\n\r\n\r\nfunction Header() {\r\n    const [loading, setLoading] = useState(true)\r\n    const [timeoutId, setTimeoutId] = useState()\r\n    const [fetchData, setFetchData] = useState([])\r\n\r\n    const API_KEY = \"0eaa790ae8de429e56157e8de9b91bff\"\r\n    const API_ID = \"5f5b1dbd\"\r\n\r\n    const fetchRecipeApi = async (searchEvent) => {\r\n        const response = await axios.get(`https://api.edamam.com/search?q=${searchEvent}&app_id=${API_ID}&app_key=${API_KEY}`)\r\n        console.log(response.data.hits)\r\n        setFetchData(response.data.hits)\r\n        setLoading(!true)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const timeout = setTimeout(() => fetchRecipeApi(e.target.value), 500)\r\n        setTimeoutId(timeout)\r\n        clearTimeout(timeoutId)\r\n\r\n\r\n    }\r\n    return (\r\n        <div className=\"main__header\">\r\n            <div className=\"main__flexDiv\">\r\n                <div className=\"main__recipeName\">\r\n                    <img src={burgerLogo} alt=\"\" />\r\n                    <h3>Recipe Finder</h3>\r\n                </div>\r\n\r\n                <div className=\"main__inputLogo\">\r\n                    <SearchIcon style={{\r\n                        color: \"#939393\", fontSize: \"25px\", marginTop: \"7px\", paddingLeft: \"7px\"\r\n                    }} />\r\n                    <input type=\"text\" onChange={handleChange} />\r\n                </div>\r\n            </div>\r\n            <div className=\"main__map\">\r\n                {loading ? <img className=\"icecream__image\" src={IceCream} alt=\"\" /> : fetchData.map((posts, index) => {\r\n                    return <Display key={index} posts={posts.recipe} />\r\n                })\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Header from './Header/Header';\n\nfunction App() {\n  return (\n    <div >\n      <Header />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}